(()=>{"use strict";class t{constructor(t,e){this.canvas=t,this.context=this.canvas.getContext("2d"),this.setLevelBackground(e)}setLevelBackground(t){let e="";switch(t){case 0:default:e="/images/start.jpg";break;case 1:case 2:case 3:e="/images/bg.png"}this.level=t,this.setBackground(e)}getLevel(){return this.level}drawBackground(){this.context.drawImage(this.backgroundImage,0,0,this.canvas.width,this.canvas.height)}setBackground(t){this.backgroundImage=new Image,this.backgroundImage.src=t}clear(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}fadeOut(t,e){const s=performance.now();let i=0;const a=h=>{const n=(h-s)/(1e3*t);i=Math.min(1,n),this.context.fillStyle=`rgba(0, 0, 0, ${i})`,this.context.fillRect(0,0,this.canvas.width,this.canvas.height),i<1?requestAnimationFrame(a):e()};requestAnimationFrame(a)}fadeIn(t,e){const s=performance.now();let i=1;const a=h=>{const n=(h-s)/(1e3*t);i=Math.max(0,1-n),this.context.fillStyle=`rgba(0, 0, 0, ${i})`,this.context.fillRect(0,0,this.canvas.width,this.canvas.height),i>0?requestAnimationFrame(a):e&&e()};requestAnimationFrame(a),0===i&&e&&e()}}function e(t,e,s,i,a=20){return t<=a&&e<=a&&s<=a&&0!==i}class s{constructor(t,e,s,i,a){this.image=new Image,this.image.src=t,this.x=e,this.y=s,this.width=i,this.height=a,this.scalingFactor=1,this.scaledWidth=this.width*this.scalingFactor,this.scaledHeight=this.height*this.scalingFactor,this.image.addEventListener("load",(()=>{console.log("Sprite image loaded:",this.image.src)}))}draw(t,e,s,i=!0){i?this.drawTransparent(t,e,s):t.drawImage(this.image,this.x,this.y,this.width,this.height,e,s,this.scaledWidth,this.scaledHeight)}drawTransparent(t,s,i){t.save();const a=document.createElement("canvas");a.width=this.scaledWidth,a.height=this.scaledHeight;const h=a.getContext("2d");h.drawImage(this.image,this.x,this.y,this.width,this.height,0,0,this.scaledWidth,this.scaledHeight);const n=h.getImageData(0,0,this.scaledWidth,this.scaledHeight),r=n.data;for(let t=0;t<r.length;t+=4)e(r[t],r[t+1],r[t+2],r[t+3])&&(r[t+3]=0);h.putImageData(n,0,0),t.drawImage(a,s,i,this.scaledWidth,this.scaledHeight),t.restore()}}class i{constructor(){this.position={x:-108,y:600},this.velocity={x:0},this.sprite=new s("/images/sprites.png",23,108,108,64),this.readyToAnimate=!1,this.moving=!1,this.animationId=null,this.lastFrameTime=null,this.animate=this.animate.bind(this),this.renderedPlayer=null}draw(t){if(!this.renderedPlayer){const t=document.createElement("canvas");t.width=this.sprite.scaledWidth,t.height=this.sprite.scaledHeight;const e=t.getContext("2d");this.sprite.draw(e,0,0),this.renderedPlayer=t}t.drawImage(this.renderedPlayer,this.position.x,this.position.y)}moveFromLeft(t){const e=-this.sprite.scaledWidth,s=((this.canvasWidth=document.querySelector("#gameCanvas").width)-this.sprite.scaledWidth)/2,i=performance.now(),a=h=>{const n=(h-i)/2e3;this.position.x=e+(s-e)*n,this.position.x<s?requestAnimationFrame(a):(this.position.x=s,this.readyToAnimate=!1,this.playerReadyToFire=!0,t&&t())};requestAnimationFrame(a)}moveLeft(){this.velocity.x=-10}moveRight(){this.velocity.x=10}animate(t){this.lastFrameTime||(this.lastFrameTime=t);const e=t-this.lastFrameTime;this.lastFrameTime=t;const s=this.position.x+this.velocity.x*(e/16.67),i=document.querySelector("#gameCanvas").width-this.sprite.scaledWidth;this.position.x=Math.min(Math.max(s,0),i),this.velocity.x=0,this.animationId=requestAnimationFrame(this.animate)}startAnimating(){this.animationId=requestAnimationFrame(this.animate)}stopAnimating(){cancelAnimationFrame(this.animationId),this.animationId=null,this.lastFrameTime=null}move(){const t=this.position.x+this.velocity.x,e=document.querySelector("#gameCanvas").width-this.sprite.scaledWidth;this.position.x=Math.min(Math.max(t,0),e),this.velocity.x=0}}class a{constructor(t,e,s){this.position=t,this.velocity=e,this.width=5,this.height=10,this.fireInterval=s,this.lastFireTime=0}draw(t){t.fillStyle="#fff",t.fillRect(this.position.x,this.position.y,this.width,this.height)}update(){this.position.x+=this.velocity.x,this.position.y+=this.velocity.y}canFire(t){return t-this.lastFireTime>=this.fireInterval}fire(t){return this.lastFireTime=t,new a({x:this.position.x,y:this.position.y},{x:0,y:-10})}}class h{constructor(t,e,i=.5){switch(this.position=e,this.scale=i,this.sprite=new s,this.renderedInvader=null,t){case"small":this.sprite=new s("/images/sprites.png",394,477,76,66);break;case"medium":this.sprite=new s("/images/sprites.png",380,581,98,63);break;case"large":this.sprite=new s("/images/sprites.png",370,686,102,69);break;default:throw new Error(`Invalid invader type: ${t}`)}this.sprite.scalingFactor=this.scale,this.sprite.scaledWidth=this.sprite.width*this.scale,this.sprite.scaledHeight=this.sprite.height*this.scale}draw(t){if(!this.renderedInvader){const t=document.createElement("canvas");t.width=this.sprite.scaledWidth,t.height=this.sprite.scaledHeight;const e=t.getContext("2d");this.sprite.drawTransparent(e,0,0),this.renderedInvader=t}t.drawImage(this.renderedInvader,this.position.x,this.position.y)}}class n{constructor(t){this.canvasContext=t,this.invadersGrid=this.createInvadersGrid(),this.direction="right",this.movementSpeed=10,this.dropDownDistance=30,this.speedFactor=2,this.lastUpdateTime=null,this.gridVisible=!1,this.updateInvadersGrid=this.updateInvadersGrid.bind(this),requestAnimationFrame(this.updateInvadersGrid),this.offscreenCanvas=document.createElement("canvas"),this.offscreenCanvas.width=t.canvas.width,this.offscreenCanvas.height=t.canvas.height,this.offscreenContext=this.offscreenCanvas.getContext("2d"),this.drawOffscreen()}createInvadersGrid(){const t=(this.canvasContext.canvas.width-652)/2,e=[];for(let s=0;s<5;s++){let i=s<1?"small":s<3?"medium":"large",a=50+54*s;for(let s=0;s<11;s++){let n=new h(i,{x:t+62*s,y:a});e.push(n)}}return e}drawOffscreen(){this.offscreenContext.clearRect(0,0,this.offscreenCanvas.width,this.offscreenCanvas.height),this.invadersGrid.forEach((t=>t.draw(this.offscreenContext)))}draw(){this.gridVisible&&this.canvasContext.drawImage(this.offscreenCanvas,0,0)}update(){this.moving&&this.move()}move(){const t="right"===this.direction?this.movementSpeed*this.speedFactor:-this.movementSpeed*this.speedFactor;let e=this.invadersGrid.some((e=>{const s=e.position.x+t;return s<=0||s+e.sprite.scaledWidth>=this.canvasContext.canvas.width}));this.invadersGrid.forEach((s=>{s.position.x+=e?0:t,s.position.y+=e?this.dropDownDistance:0})),e&&(this.direction="right"===this.direction?"left":"right"),this.drawOffscreen()}updateInvadersGrid(t){this.lastUpdateTime||(this.lastUpdateTime=t),t-this.lastUpdateTime>=500&&this.gridVisible&&(this.update(),this.lastUpdateTime=t),requestAnimationFrame(this.updateInvadersGrid)}startInvadersMovement(){this.moving=!0}}class r{constructor(e){this.canvas=new t(document.querySelector("#gameCanvas"),e),document.addEventListener("keydown",this.handleKeyDown.bind(this)),document.addEventListener("keyup",this.handleKeyUp.bind(this)),this.player=new i,this.projectiles=[],this.keysPressed={},this.invadersGrid=new n(this.canvas.context)}draw(){this.canvas.clear(),this.canvas.drawBackground(),this.player.draw(this.canvas.context),this.invadersGrid.draw(),this.projectiles.forEach((t=>{t.draw(this.canvas.context)})),(this.keysPressed.ArrowLeft||this.keysPressed.a)&&(this.player.moveLeft(),this.player.moving=!0),(this.keysPressed.ArrowRight||this.keysPressed.d)&&(this.player.moveRight(),this.player.moving=!0),this.keysPressed.ArrowLeft||this.keysPressed.a||this.keysPressed.ArrowRight||this.keysPressed.d||(this.player.moving=!1),this.player.moving&&this.player.move()}handleKeyDown(t){this.keysPressed[t.key]=!0," "===t.key&&this.createProjectile()}handleKeyUp(t){this.keysPressed[t.key]=!1,this.keysPressed.ArrowLeft||this.keysPressed.a||this.keysPressed.ArrowRight||this.keysPressed.d||(this.player.moving=!1)}createProjectile(){if(!this.player.playerReadyToFire)return;const t=Date.now();if(t-this.lastProjectileTime<500)return;const e={x:this.player.position.x+this.player.sprite.scaledWidth/2-2.5,y:this.player.position.y},s=new a(e,{x:0,y:-10});this.projectiles.push(s),this.lastProjectileTime=t}updateProjectiles(){this.projectiles.forEach((t=>{t.update()})),this.projectiles=this.projectiles.filter((t=>t.position.y>-t.height))}showInvadersGrid(){this.invadersGrid.gridVisible=!0}}class o{constructor(t){this.startButton=document.getElementById("startButton"),this.game=t,this.setupEventListeners()}setupEventListeners(){this.startButton.addEventListener("click",this.fadeOutStartScreen.bind(this)),window.addEventListener("keydown",(t=>{"Enter"===t.key&&this.fadeOutStartScreen()}))}fadeOutStartScreen(){this.startButton.style.opacity="0",requestAnimationFrame((()=>{this.game.canvas.fadeOut(1,(()=>{this.startButton.style.display="none",this.game.canvas.setLevelBackground(1),this.game.showInvadersGrid(),this.game.canvas.fadeIn(1,(()=>{this.game.player.moveFromLeft((()=>{this.game.gameStarted=!0,this.game.invadersGrid.startInvadersMovement()}))}))}))}))}}const d=new r(0);new o(d),function(t,e){let s=0,i=[];t.forEach((e=>{const a=new Image;a.src=e,a.onload=()=>{s++,s===t.length&&(()=>{const t=new r(0);new o(t),function e(){t.gameStarted&&t.updateProjectiles(),t.draw(),requestAnimationFrame(e)}()})()},i.push(a)}))}(["/images/sprites.png"]),function t(){d.gameStarted&&d.updateProjectiles(),d.draw(),requestAnimationFrame(t)}()})();